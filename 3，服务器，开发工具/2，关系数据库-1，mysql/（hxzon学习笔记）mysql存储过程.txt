（hxzon学习笔记）mysql存储过程

by hxzon
====
修改分隔符，因为内部会用到分号。

delimiter //


1，删除存储过程

drop procedure if exists xxx

不能在存储过程中删除另一个存储过程。

==
显示数据库中所有存储的存储过程基本信息，包括所属数据库，存储过程名称，创建时间等
show procedure status

显示某一个mysql存储过程的详细信息
show create procedure sp_name

====
2，调用存储过程

call xxx(yyy);

====
3，创建存储过程

create procedure xxx(in p1 int,in p2 varchar(32),out po3 int)
begin
xxx;
end;

begin...end用于多条语句，单条语句不必。

in 可被修改，不会影响实参。
out 出参数。
inout

varchar必须跟长度。

====
3.1，定义变量

declare a int ; 
set a=100;

可用以下语句代替：
declare a int default 100;

declare variable_name [,variable_name...] datatype [default value]; 

其中，datatype为mysql的数据类型，如:INT, FLOAT, DATE, VARCHAR(length) 。

变量分为用户变量和系统变量，
系统变量又分为会话和全局级变量

用户变量：用户变量名一般以@开头。

select 'Hello World' into @x;

set @y='Goodbye Cruel World';

set @z=1+2+3;
select @z;

例：

DECLARE l_int INT unsigned default 4000000; 
DECLARE l_numeric NUMERIC(8,2) DEFAULT 9.95; 
DECLARE l_date DATE DEFAULT '1999-12-31'; 
DECLARE l_datetime DATETIME DEFAULT '1999-12-31 23:59:59';
DECLARE l_varchar VARCHAR(255) DEFAULT 'This will not be padded';

====
4，运算符

<>, !=       不等于 2<>3 False
<=>          严格比较两个NULL值是否相等 NULL<=>NULL True

LIKE          简单模式匹配 "Guy Harrison" LIKE "Guy%" True
REGEXP       正则式匹配 "Guy Harrison" REGEXP "[Gg]reg" False

is null      为空
is not null 不为空

1.算术运算符
+     加   SET var1=2+2;       4
-     减   SET var2=3-2;       1
*      乘   SET var3=3*2;       6
/     除   SET var4=10/3;      3.3333
DIV   整除 SET var5=10 DIV 3; 3
%     取模 SET var6=10%3 ;     1

2.比较运算符
>            大于 1>2 False
<            小于 2<1 False
<=           小于等于 2<=2 True
>=           大于等于 3>=2 True
BETWEEN      在两值之间 5 BETWEEN 1 AND 10 True
NOT BETWEEN 不在两值之间 5 NOT BETWEEN 1 AND 10 False
IN           在集合中 5 IN (1,2,3,4) False
NOT IN       不在集合中 5 NOT IN (1,2,3,4) True
=             等于 2=3 False

3.逻辑运算符

4.位运算符
|   或
&   与
<< 左移位
>> 右移位
~   非(单目运算，按位取反)

====
5，注释

单行注释，双横杠：--

多行注释，/* 注释内容 */

====
6，区块

可以给区块起别名，如：

lable:begin
xxx;
end lable;

可以用leave lable;跳出区块，执行区块以后的代码。

====
7，流程控制

分支结构
if
case

循环结构
for循环
while循环
loop循环
repeat until循环

====
8，函数库

mysql存储过程基本函数包括：字符串类型，数值类型，日期类型.

一、字符串类

CHARSET(str) //返回字串字符集

CONCAT (string2 [,… ]) //连接字串

INSTR (string ,substring ) //返回substring首次在string中出现的位置,不存在返回0

LCASE (string2 ) //转换成小写

LEFT (string2 ,length ) //从string2中的左边起取length个字符

LENGTH (string ) //string长度

LOAD_FILE (file_name ) //从文件读取内容

LOCATE (substring , string [,start_position ] ) 同INSTR,但可指定开始位置

LPAD (string2 ,length ,pad ) //重复用pad加在string开头,直到字串长度为length

LTRIM (string2 ) //去除前端空格

REPEAT (string2 ,count ) //重复count次

REPLACE (str ,search_str ,replace_str ) //在str中用replace_str替换search_str

RPAD (string2 ,length ,pad) //在str后用pad补充,直到长度为length

RTRIM (string2 ) //去除后端空格

STRCMP (string1 ,string2 ) //逐字符比较两字串大小,

SUBSTRING (str , position [,length ]) 
从str的position开始，取length个字符。
注：mysql中处理字符串时，默认第一个字符下标为1，即参数position必须大于等于1。

TRIM([[BOTH|LEADING|TRAILING] [padding] FROM]string2) //去除指定位置的指定字符

UCASE (string2 ) //转换成大写

RIGHT(string2,length) //取string2最后length个字符

SPACE(count) //生成count个空格

二、数值类型

ABS (number2 ) //绝对值

BIN (decimal_number ) //十进制转二进制

CEILING (number2 ) //向上取整

CONV(number2,from_base,to_base) //进制转换

FLOOR (number2 ) //向下取整

FORMAT (number,decimal_places ) //保留小数位数

HEX (DecimalNumber ) //转十六进制
注：HEX()中可传入字符串，则返回其ASC-11码，如HEX(’DEF’)返回4142143
也可以传入十进制整数，返回其十六进制编码，如HEX(25)返回19

LEAST (number , number2 [,..]) //求最小值

MOD (numerator ,denominator ) //求余

POWER (number ,power ) //求指数

RAND([seed]) //随机数

ROUND (number [,decimals ]) 
四舍五入，decimals为小数位数。
注：返回类型并非总是整数。

SIGN (number2 ) //返回符号,正负或0

SQRT(number2) //开平方

三、日期类型

ADDTIME (date2 ,time_interval ) //将time_interval加到date2

CONVERT_TZ (datetime2 ,fromTZ ,toTZ ) //转换时区

CURRENT_DATE ( ) //当前日期

CURRENT_TIME ( ) //当前时间

CURRENT_TIMESTAMP ( ) //当前时间戳

DATE (datetime ) //返回datetime的日期部分

DATE_ADD (date2 , INTERVAL d_value d_type ) //在date2中加上日期或时间

DATE_FORMAT (datetime ,FormatCodes ) //使用formatcodes格式显示datetime

DATE_SUB (date2 , INTERVAL d_value d_type ) //在date2上减去一个时间

DATEDIFF (date1 ,date2 ) //两个日期差

DAY (date ) //返回日期的天

DAYNAME (date ) //英文星期

DAYOFWEEK (date ) //星期(1-7) ,1为星期天

DAYOFYEAR (date ) //一年中的第几天

EXTRACT (interval_name FROM date ) //从date中提取日期的指定部分

MAKEDATE (year ,day ) //给出年及年中的第几天,生成日期串

MAKETIME (hour ,minute ,second ) //生成时间串

MONTHNAME (date ) //英文月份名

NOW ( ) //当前时间

SEC_TO_TIME (seconds ) //秒数转成时间

STR_TO_DATE (string ,format ) //字串转成时间,以format格式显示

TIMEDIFF (datetime1 ,datetime2 ) //两个时间差

TIME_TO_SEC (time ) //时间转秒数]

WEEK (date_time [,start_of_week ]) //第几周

YEAR (datetime ) //年份

DAYOFMONTH(datetime) //月的第几天

HOUR(datetime) //小时

LAST_DAY(date) //date的月的最后日期

MICROSECOND(datetime) //微秒

MONTH(datetime) //月

MINUTE(datetime) //分

注：可用在INTERVAL中的类型：
DAY ,DAY_HOUR ,DAY_MINUTE ,DAY_SECOND ,
HOUR ,HOUR_MINUTE ,HOUR_SECOND ,
MINUTE ,MINUTE_SECOND,
MONTH ,SECOND ,YEAR

