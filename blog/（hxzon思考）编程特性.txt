（hxzon思考）编程语言的特性

========
1，字面量语法

2，函数一等公民

3，宏

lisp宏
符号宏，本地宏

4，scheme续延

5，common lisp状况系统

状况系统，允许底层和中层函数提供多种“修复策略”，
而高层函数可选择使用哪种“修复策略”。
产生状况时，调用栈可以不用回退。

（“状况系统” 好于“非检查异常” 好于 “返回值” 好于 “受检异常”）

========
6，运行时加载，运行时动态更新

7，多返回值（？）

“let解构”可近似实现。

8，私有，常量

通过命名约定，读起来清晰。

9，名字

区分大小写。

go里面没有“导入”，所以无前缀一定是本包内的名字。
来自外包的名字一定有前缀。

10，允许赋值语句

《王垠-对函数式语言的误解》：
这些局部的赋值操作，跟函数调用时的“参数传递”没有本质的区别，
它们不过都是把信息传送到指定的节点而已。

========
不需要的特性

1，类
导致的问题：类型转换，不确定方法该归属哪个类，多重继承

2，原型（可自己实现）

3，

