（hxzon思考）游戏开发-属性设计-v2

by hxzon
========
1，游戏对象的数据

-1，值类型
-2，其他游戏对象的引用

========
2，数据来源

来自定义文件：不必保存
固定的公式值：不必保存

不固定的公式值（含随机因子）：需要保存

========
3，数据生命周期

始终不变的值
不断变化的值

========
4，值的分段，值的分组

分段，为了公式计算。

同一属性的不同的段，可看成是“有依赖性的不同的属性”。

分组，将不同属性的同一段放在一起，为了显示。

==
可消耗，但会恢复的属性，有两个值：当前值，最大值

========
5，级联更新

多个系统间的属性级联更新

装备/技能=》玩家=》技能

========
6，api设计

==
attrbar-get-value [go g a vd]
获取属性值
外部api

==
动态变量，用于跟踪所有的值变化
（不仅仅是“最终段”，在通知时再做筛选）

*attrs-orig*
*attrs-now*

==
attrbar-set-values [go & gavs]
更新属性值（多个段，多个属性）
外部api
最高层调用，初始化两个动态变量

==
attrbar-set-values-impl [go & gavs]
内部api
非最高层调用，不初始化动态变量
转发给 attrbar-set-value-impl

==
attrbar-just-set-value-impl [go g a v]
设置值，并记录更改前后的值（不仅仅是“最终段”）
内部api

==
attrbar-set-value-impl [go g a v]
游戏逻辑的实现
先调用 attrbar-just-set-value-impl
根据 游戏对象类型，分组，属性，更改其他值
（通过 attrbar-set-values-impl 或 attrbar-just-set-value-impl ）






